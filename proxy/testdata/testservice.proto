/* Copyright (c) 2019 Snowflake Inc. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
*/

syntax = "proto3";

package Testdata;

option go_package = "github.com/Snowflake-Labs/sansshell/proxy/testdata";

message MyNested {
  string fine = 1;
  string sensitive = 2 [debug_redact = true];
}

message TestRequest {
  string input = 1;

  repeated string list_scalar = 2;
  repeated MyNested list_msg = 3;

  map<string, string> map_scalar = 4;
  map<string, MyNested> map_msg = 5;
}

message TestResponse {
  string output = 2;
}


service TestService {
  rpc TestUnary(TestRequest) returns (TestResponse) {}
  rpc TestServerStream(TestRequest) returns (stream TestResponse) {}
  rpc TestClientStream(stream TestRequest) returns (TestResponse) {}
  rpc TestBidiStream(stream TestRequest) returns (stream TestResponse) {}
}

// Used to test that services without methods are filtered.
service TestServiceWithoutMethods { }
