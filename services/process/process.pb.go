// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: process.proto

package process

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlobDestination int32

const (
	BlobDestination_BLOB_DESTINATION_UNKNOWN BlobDestination = 0
	// Just stream it back.
	BlobDestination_BLOB_DESTINATION_STREAM BlobDestination = 1
	// This state requires an additional field to designate location.
	BlobDestination_BLOB_DESTINATION_URL BlobDestination = 2
)

// Enum value maps for BlobDestination.
var (
	BlobDestination_name = map[int32]string{
		0: "BLOB_DESTINATION_UNKNOWN",
		1: "BLOB_DESTINATION_STREAM",
		2: "BLOB_DESTINATION_URL",
	}
	BlobDestination_value = map[string]int32{
		"BLOB_DESTINATION_UNKNOWN": 0,
		"BLOB_DESTINATION_STREAM":  1,
		"BLOB_DESTINATION_URL":     2,
	}
)

func (x BlobDestination) Enum() *BlobDestination {
	p := new(BlobDestination)
	*p = x
	return p
}

func (x BlobDestination) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlobDestination) Descriptor() protoreflect.EnumDescriptor {
	return file_process_proto_enumTypes[0].Descriptor()
}

func (BlobDestination) Type() protoreflect.EnumType {
	return &file_process_proto_enumTypes[0]
}

func (x BlobDestination) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlobDestination.Descriptor instead.
func (BlobDestination) EnumDescriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{0}
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Flags to pass to ps. Must be prefixed with -
	Option []string `protobuf:"bytes,1,rep,name=option,proto3" json:"option,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{0}
}

func (x *ListRequest) GetOption() []string {
	if x != nil {
		return x.Option
	}
	return nil
}

type ProcessEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessDetails []*ProcessDetail `protobuf:"bytes,1,rep,name=process_details,json=processDetails,proto3" json:"process_details,omitempty"`
}

func (x *ProcessEntry) Reset() {
	*x = ProcessEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEntry) ProtoMessage() {}

func (x *ProcessEntry) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEntry.ProtoReflect.Descriptor instead.
func (*ProcessEntry) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessEntry) GetProcessDetails() []*ProcessDetail {
	if x != nil {
		return x.ProcessDetails
	}
	return nil
}

type ProcessDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProcessDetail) Reset() {
	*x = ProcessDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDetail) ProtoMessage() {}

func (x *ProcessDetail) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDetail.ProtoReflect.Descriptor instead.
func (*ProcessDetail) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessDetail) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *ProcessDetail) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessEntries []*ProcessEntry `protobuf:"bytes,1,rep,name=process_entries,json=processEntries,proto3" json:"process_entries,omitempty"`
}

func (x *ListReply) Reset() {
	*x = ListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReply) ProtoMessage() {}

func (x *ListReply) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReply.ProtoReflect.Descriptor instead.
func (*ListReply) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{3}
}

func (x *ListReply) GetProcessEntries() []*ProcessEntry {
	if x != nil {
		return x.ProcessEntries
	}
	return nil
}

type GetStacksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *GetStacksRequest) Reset() {
	*x = GetStacksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStacksRequest) ProtoMessage() {}

func (x *GetStacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStacksRequest.ProtoReflect.Descriptor instead.
func (*GetStacksRequest) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{4}
}

func (x *GetStacksRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type ThreadStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadNumber int64    `protobuf:"varint,1,opt,name=thread_number,json=threadNumber,proto3" json:"thread_number,omitempty"`
	ThreadId     int64    `protobuf:"varint,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	Lwp          int64    `protobuf:"varint,3,opt,name=lwp,proto3" json:"lwp,omitempty"`
	Stacks       []string `protobuf:"bytes,4,rep,name=stacks,proto3" json:"stacks,omitempty"`
}

func (x *ThreadStack) Reset() {
	*x = ThreadStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadStack) ProtoMessage() {}

func (x *ThreadStack) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadStack.ProtoReflect.Descriptor instead.
func (*ThreadStack) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{5}
}

func (x *ThreadStack) GetThreadNumber() int64 {
	if x != nil {
		return x.ThreadNumber
	}
	return 0
}

func (x *ThreadStack) GetThreadId() int64 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *ThreadStack) GetLwp() int64 {
	if x != nil {
		return x.Lwp
	}
	return 0
}

func (x *ThreadStack) GetStacks() []string {
	if x != nil {
		return x.Stacks
	}
	return nil
}

type GetStacksReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stacks []*ThreadStack `protobuf:"bytes,1,rep,name=stacks,proto3" json:"stacks,omitempty"`
}

func (x *GetStacksReply) Reset() {
	*x = GetStacksReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStacksReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStacksReply) ProtoMessage() {}

func (x *GetStacksReply) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStacksReply.ProtoReflect.Descriptor instead.
func (*GetStacksReply) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{6}
}

func (x *GetStacksReply) GetStacks() []*ThreadStack {
	if x != nil {
		return x.Stacks
	}
	return nil
}

type GetJavaStacksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *GetJavaStacksRequest) Reset() {
	*x = GetJavaStacksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJavaStacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJavaStacksRequest) ProtoMessage() {}

func (x *GetJavaStacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJavaStacksRequest.ProtoReflect.Descriptor instead.
func (*GetJavaStacksRequest) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{7}
}

func (x *GetJavaStacksRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type JavaThreadStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Daemon         bool     `protobuf:"varint,2,opt,name=daemon,proto3" json:"daemon,omitempty"`
	Priority       int32    `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	OsPriority     int32    `protobuf:"varint,4,opt,name=os_priority,json=osPriority,proto3" json:"os_priority,omitempty"`
	CpuMs          int64    `protobuf:"varint,5,opt,name=cpu_ms,json=cpuMs,proto3" json:"cpu_ms,omitempty"`
	ElapsedSec     int64    `protobuf:"varint,6,opt,name=elapsed_sec,json=elapsedSec,proto3" json:"elapsed_sec,omitempty"`
	ThreadId       int64    `protobuf:"varint,7,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	NativeThreadId int64    `protobuf:"varint,8,opt,name=native_thread_id,json=nativeThreadId,proto3" json:"native_thread_id,omitempty"`
	State          string   `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	Pc             int64    `protobuf:"varint,10,opt,name=pc,proto3" json:"pc,omitempty"`
	ThreadState    string   `protobuf:"bytes,11,opt,name=thread_state,json=threadState,proto3" json:"thread_state,omitempty"`
	Stacks         []string `protobuf:"bytes,12,rep,name=stacks,proto3" json:"stacks,omitempty"`
}

func (x *JavaThreadStack) Reset() {
	*x = JavaThreadStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JavaThreadStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JavaThreadStack) ProtoMessage() {}

func (x *JavaThreadStack) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JavaThreadStack.ProtoReflect.Descriptor instead.
func (*JavaThreadStack) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{8}
}

func (x *JavaThreadStack) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JavaThreadStack) GetDaemon() bool {
	if x != nil {
		return x.Daemon
	}
	return false
}

func (x *JavaThreadStack) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *JavaThreadStack) GetOsPriority() int32 {
	if x != nil {
		return x.OsPriority
	}
	return 0
}

func (x *JavaThreadStack) GetCpuMs() int64 {
	if x != nil {
		return x.CpuMs
	}
	return 0
}

func (x *JavaThreadStack) GetElapsedSec() int64 {
	if x != nil {
		return x.ElapsedSec
	}
	return 0
}

func (x *JavaThreadStack) GetThreadId() int64 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *JavaThreadStack) GetNativeThreadId() int64 {
	if x != nil {
		return x.NativeThreadId
	}
	return 0
}

func (x *JavaThreadStack) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *JavaThreadStack) GetPc() int64 {
	if x != nil {
		return x.Pc
	}
	return 0
}

func (x *JavaThreadStack) GetThreadState() string {
	if x != nil {
		return x.ThreadState
	}
	return ""
}

func (x *JavaThreadStack) GetStacks() []string {
	if x != nil {
		return x.Stacks
	}
	return nil
}

type GetJavaStacksReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stacks []*JavaThreadStack `protobuf:"bytes,1,rep,name=stacks,proto3" json:"stacks,omitempty"`
}

func (x *GetJavaStacksReply) Reset() {
	*x = GetJavaStacksReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJavaStacksReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJavaStacksReply) ProtoMessage() {}

func (x *GetJavaStacksReply) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJavaStacksReply.ProtoReflect.Descriptor instead.
func (*GetJavaStacksReply) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{9}
}

func (x *GetJavaStacksReply) GetStacks() []*JavaThreadStack {
	if x != nil {
		return x.Stacks
	}
	return nil
}

type GetCoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid         int64           `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Destination BlobDestination `protobuf:"varint,2,opt,name=destination,proto3,enum=Process.BlobDestination" json:"destination,omitempty"`
	// Only used for BLOB_DESTINATION_URL
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetCoreRequest) Reset() {
	*x = GetCoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoreRequest) ProtoMessage() {}

func (x *GetCoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoreRequest.ProtoReflect.Descriptor instead.
func (*GetCoreRequest) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{10}
}

func (x *GetCoreRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *GetCoreRequest) GetDestination() BlobDestination {
	if x != nil {
		return x.Destination
	}
	return BlobDestination_BLOB_DESTINATION_UNKNOWN
}

func (x *GetCoreRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetCoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCoreReply) Reset() {
	*x = GetCoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoreReply) ProtoMessage() {}

func (x *GetCoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoreReply.ProtoReflect.Descriptor instead.
func (*GetCoreReply) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{11}
}

func (x *GetCoreReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetJavaHeapDumpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid         int64           `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Destination BlobDestination `protobuf:"varint,2,opt,name=destination,proto3,enum=Process.BlobDestination" json:"destination,omitempty"`
	// Only used for BLOB_DESTINATION_URL
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetJavaHeapDumpRequest) Reset() {
	*x = GetJavaHeapDumpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJavaHeapDumpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJavaHeapDumpRequest) ProtoMessage() {}

func (x *GetJavaHeapDumpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJavaHeapDumpRequest.ProtoReflect.Descriptor instead.
func (*GetJavaHeapDumpRequest) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{12}
}

func (x *GetJavaHeapDumpRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *GetJavaHeapDumpRequest) GetDestination() BlobDestination {
	if x != nil {
		return x.Destination
	}
	return BlobDestination_BLOB_DESTINATION_UNKNOWN
}

func (x *GetJavaHeapDumpRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetJavaHeapDumpReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetJavaHeapDumpReply) Reset() {
	*x = GetJavaHeapDumpReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_process_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJavaHeapDumpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJavaHeapDumpReply) ProtoMessage() {}

func (x *GetJavaHeapDumpReply) ProtoReflect() protoreflect.Message {
	mi := &file_process_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJavaHeapDumpReply.ProtoReflect.Descriptor instead.
func (*GetJavaHeapDumpReply) Descriptor() ([]byte, []int) {
	return file_process_proto_rawDescGZIP(), []int{13}
}

func (x *GetJavaHeapDumpReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_process_proto protoreflect.FileDescriptor

var file_process_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x25, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4f, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x3f, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x3d, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x4b, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x22, 0x79, 0x0a, 0x0b, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x77, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6c, 0x77, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x3e, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x06, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x28, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x76, 0x61, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0xda, 0x02, 0x0a, 0x0f, 0x4a, 0x61, 0x76, 0x61,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x70, 0x75, 0x5f, 0x6d, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x70, 0x75, 0x4d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x53, 0x65, 0x63, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x63, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x70, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x73, 0x22, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x76, 0x61, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x4a, 0x61, 0x76, 0x61, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x52, 0x06, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x70, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x3a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e,
	0x42, 0x6c, 0x6f, 0x62, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x22,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x78, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x76, 0x61, 0x48, 0x65, 0x61,
	0x70, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x3a,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x42, 0x6c,
	0x6f, 0x62, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x2a, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4a, 0x61, 0x76, 0x61, 0x48, 0x65, 0x61, 0x70, 0x44, 0x75, 0x6d, 0x70, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x66, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x62,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x42,
	0x4c, 0x4f, 0x42, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x4c, 0x4f,
	0x42, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x52, 0x45, 0x41, 0x4d, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x4c, 0x4f, 0x42, 0x5f, 0x44,
	0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x02,
	0x32, 0xe5, 0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x19, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x76, 0x61, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x73, 0x12, 0x1d, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x61, 0x76, 0x61, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4a, 0x61, 0x76, 0x61, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x55, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x76, 0x61, 0x48, 0x65, 0x61, 0x70,
	0x44, 0x75, 0x6d, 0x70, 0x12, 0x1f, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x61, 0x76, 0x61, 0x48, 0x65, 0x61, 0x70, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x61, 0x76, 0x61, 0x48, 0x65, 0x61, 0x70, 0x44, 0x75, 0x6d, 0x70, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x6e, 0x6f, 0x77, 0x66, 0x6c, 0x61, 0x6b, 0x65,
	0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x61, 0x6e, 0x73, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_process_proto_rawDescOnce sync.Once
	file_process_proto_rawDescData = file_process_proto_rawDesc
)

func file_process_proto_rawDescGZIP() []byte {
	file_process_proto_rawDescOnce.Do(func() {
		file_process_proto_rawDescData = protoimpl.X.CompressGZIP(file_process_proto_rawDescData)
	})
	return file_process_proto_rawDescData
}

var file_process_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_process_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_process_proto_goTypes = []interface{}{
	(BlobDestination)(0),           // 0: Process.BlobDestination
	(*ListRequest)(nil),            // 1: Process.ListRequest
	(*ProcessEntry)(nil),           // 2: Process.ProcessEntry
	(*ProcessDetail)(nil),          // 3: Process.ProcessDetail
	(*ListReply)(nil),              // 4: Process.ListReply
	(*GetStacksRequest)(nil),       // 5: Process.GetStacksRequest
	(*ThreadStack)(nil),            // 6: Process.ThreadStack
	(*GetStacksReply)(nil),         // 7: Process.GetStacksReply
	(*GetJavaStacksRequest)(nil),   // 8: Process.GetJavaStacksRequest
	(*JavaThreadStack)(nil),        // 9: Process.JavaThreadStack
	(*GetJavaStacksReply)(nil),     // 10: Process.GetJavaStacksReply
	(*GetCoreRequest)(nil),         // 11: Process.GetCoreRequest
	(*GetCoreReply)(nil),           // 12: Process.GetCoreReply
	(*GetJavaHeapDumpRequest)(nil), // 13: Process.GetJavaHeapDumpRequest
	(*GetJavaHeapDumpReply)(nil),   // 14: Process.GetJavaHeapDumpReply
}
var file_process_proto_depIdxs = []int32{
	3,  // 0: Process.ProcessEntry.process_details:type_name -> Process.ProcessDetail
	2,  // 1: Process.ListReply.process_entries:type_name -> Process.ProcessEntry
	6,  // 2: Process.GetStacksReply.stacks:type_name -> Process.ThreadStack
	9,  // 3: Process.GetJavaStacksReply.stacks:type_name -> Process.JavaThreadStack
	0,  // 4: Process.GetCoreRequest.destination:type_name -> Process.BlobDestination
	0,  // 5: Process.GetJavaHeapDumpRequest.destination:type_name -> Process.BlobDestination
	1,  // 6: Process.Process.List:input_type -> Process.ListRequest
	5,  // 7: Process.Process.GetStacks:input_type -> Process.GetStacksRequest
	8,  // 8: Process.Process.GetJavaStacks:input_type -> Process.GetJavaStacksRequest
	11, // 9: Process.Process.GetCore:input_type -> Process.GetCoreRequest
	13, // 10: Process.Process.GetJavaHeapDump:input_type -> Process.GetJavaHeapDumpRequest
	4,  // 11: Process.Process.List:output_type -> Process.ListReply
	7,  // 12: Process.Process.GetStacks:output_type -> Process.GetStacksReply
	10, // 13: Process.Process.GetJavaStacks:output_type -> Process.GetJavaStacksReply
	12, // 14: Process.Process.GetCore:output_type -> Process.GetCoreReply
	14, // 15: Process.Process.GetJavaHeapDump:output_type -> Process.GetJavaHeapDumpReply
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_process_proto_init() }
func file_process_proto_init() {
	if File_process_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_process_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStacksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStacksReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJavaStacksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JavaThreadStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJavaStacksReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJavaHeapDumpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_process_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJavaHeapDumpReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_process_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_process_proto_goTypes,
		DependencyIndexes: file_process_proto_depIdxs,
		EnumInfos:         file_process_proto_enumTypes,
		MessageInfos:      file_process_proto_msgTypes,
	}.Build()
	File_process_proto = out.File
	file_process_proto_rawDesc = nil
	file_process_proto_goTypes = nil
	file_process_proto_depIdxs = nil
}
