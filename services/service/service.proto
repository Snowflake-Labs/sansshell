/* Copyright (c) 2019 Snowflake Inc. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
*/

syntax = "proto3";

package Service;
option go_package = "github.com/Snowflake-Labs/sansshell/services/service";

service Service {
  // List returns a list of services with attendent status.
  rpc List(ListRequest) returns (ListReply) {}
  // Status requests the status of a single service.
  rpc Status(StatusRequest) returns (StatusReply) {}
  // Action alters the status of a single service. This will always force the
  // requested state to happen regardless of current state.
  rpc Action(ActionRequest) returns (ActionReply) {}
}

// A SystemType specifies the service management system
// on which to operate.
// The 'unknown' value, if specified in a request, will
// map to an appropriate implementation-defined default
// for the system running SansShell.
enum SystemType {
  SYSTEM_TYPE_UNKNOWN = 0;
  SYSTEM_TYPE_SYSTEMD = 1;
};

// The operational status of the service.
enum Status {
  STATUS_UNKNOWN = 0;
  STATUS_RUNNING = 1;
  STATUS_STOPPED = 2;
}

// An action taken to modify the operational status of a
// service.
enum Action {
  ACTION_UNKNOWN = 0;
  ACTION_START = 1;
  ACTION_STOP = 2;
  ACTION_RESTART = 3;
  ACTION_ENABLE = 4;
  ACTION_DISABLE = 5;
}

// ServiceStatus pairs a service with it's current status.
message ServiceStatus {
  string service_name = 1;
  Status status = 2;
}

// A request to list all configured services for a single
// system type.
message ListRequest { SystemType system_type = 1; }

// A list of all configured services, with their attendent
// status.
message ListReply {
  SystemType system_type = 1;
  repeated ServiceStatus services = 2;
}

// A request to list the status of a single service.
message StatusRequest {
  SystemType system_type = 1;
  string service_name = 2;
}

// A StatusReply contains the operational status of
// a single service.
message StatusReply {
  SystemType system_type = 1;
  ServiceStatus service_status = 2;
}

// A request to alter the state of a single service.
message ActionRequest {
  SystemType system_type = 1;
  string service_name = 2;
  Action action = 3;
}

// The result of a request to alter the status of a service.
message ActionReply {
  SystemType system_type = 1;
  string service_name = 2;
}
