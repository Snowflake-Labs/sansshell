/* Copyright (c) 2019 Snowflake Inc. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
*/

syntax = "proto3";

option go_package = "github.com/Snowflake-Labs/sansshell/services/fdb";

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

package Fdb;

// The fdb configuration service definition.
service Conf {
  // Read a configuration value from a section in FDB config file.
  rpc Read(ReadRequest) returns (FdbConfResponse) {}
  // Write updates a configuration value in a section of FDB config file.
  rpc Write(WriteRequest) returns (google.protobuf.Empty) {}
  // Delete a section value based on a key
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {}
}

message Location {
  string file = 1;
  string section = 2;
  string key = 3;
}

message ReadRequest { Location location = 1; }

message WriteRequest {
  Location location = 1;
  string value = 2;
}

message DeleteRequest { Location location = 1; }

message FdbConfResponse { string value = 1; }

service FDBMove {
  rpc FDBMoveDataCopy(FDBMoveDataCopyRequest) returns (FDBMoveDataCopyResponse);
  rpc FDBMoveDataWait(FDBMoveDataWaitRequest) returns (stream FDBMoveDataWaitResponse);
}

message FDBMoveDataCopyRequest {
  string cluster_file = 1;
  string tenant_group = 2;
  string source_cluster = 3;
  string destination_cluster = 4;
  int64 num_procs = 5;
}

message FDBMoveDataCopyResponse {
  int64 id = 1;
  bool existing = 2;
}

message FDBMoveDataWaitRequest {
  int64 id = 1;
}

message FDBMoveDataWaitResponse {
  bytes stdout = 1;
  bytes stderr = 2;
  int32 retCode = 3;
}

service CLI {
  rpc FDBCLI(FDBCLIRequest) returns (stream FDBCLIResponse) {}
}

message FDBCLIAdvanceversion { int64 version = 1; }

message FDBCLIBegin {}

message FDBCLIBlobrangeStart {
  string begin_key = 1;
  string end_key = 2;
}

message FDBCLIBlobrangeStop {
  string begin_key = 1;
  string end_key = 2;
}

message FDBCLIBlobrange {
  oneof request {
    FDBCLIBlobrangeStart start = 1;
    FDBCLIBlobrangeStop stop = 2;
  }
}

message FDBCLICacheRangeSet {
  string begin_key = 1;
  string end_key = 2;
}

message FDBCLICacheRangeClear {
  string begin_key = 1;
  string end_key = 2;
}

message FDBCLICacheRange {
  oneof request {
    FDBCLICacheRangeSet set = 1;
    FDBCLICacheRangeClear clear = 2;
  }
}

message FDBCLIChangefeedList {}

message FDBCLIChangefeedRegister {
  string range_id = 1;
  string begin = 2;
  string end = 3;
}

message FDBCLIChangefeedStop { string range_id = 1; }

message FDBCLIChangefeedDestroy { string range_id = 1; }

message FDBCLIChangefeedStreamNoVersion {}

message FDBCLIChangefeedStreamStartVersion { int64 start_version = 1; }

message FDBCLIChangefeedStreamStartEndVersion {
  int64 start_version = 1;
  int64 end_version = 2;
}

message FDBCLIChangefeedStream {
  string range_id = 1;
  // Either begin only is set or begin+end. Can't just set end.
  oneof type {
    FDBCLIChangefeedStreamNoVersion no_version = 2;
    FDBCLIChangefeedStreamStartVersion start_version = 3;
    FDBCLIChangefeedStreamStartEndVersion start_end_version = 4;
  }
}

message FDBCLIChangefeedStreamPop {
  string range_id = 1;
  int64 version = 2;
}

message FDBCLIChangefeed {
  oneof request {
    FDBCLIChangefeedList list = 1;
    FDBCLIChangefeedRegister register = 2;
    FDBCLIChangefeedStop stop = 3;
    FDBCLIChangefeedDestroy destroy = 4;
    FDBCLIChangefeedStream stream = 5;
    FDBCLIChangefeedStreamPop pop = 6;
  }
}

message FDBCLIClear { string key = 1; }

message FDBCLIClearrange {
  string begin_key = 1;
  string end_key = 2;
}

message FDBCLICommit {}

// See
// https://apple.github.io/foundationdb/command-line-interface.html#configure
// for possible values for options.
message FDBCLIConfigure {
  google.protobuf.StringValue new_or_tss = 1;
  google.protobuf.StringValue redundancy_mode = 2;
  google.protobuf.StringValue storage_engine = 3;
  google.protobuf.UInt32Value grv_proxies = 4;
  google.protobuf.UInt32Value commit_proxies = 5;
  google.protobuf.UInt32Value resolvers = 6;
  google.protobuf.UInt32Value logs = 7;
  google.protobuf.UInt32Value count = 8;
  google.protobuf.UInt32Value perpetual_storage_wiggle = 9;
  google.protobuf.StringValue perpetual_storage_wiggle_locality = 10;
  google.protobuf.StringValue storage_migration_type = 11;
  google.protobuf.StringValue tenant_mode = 12;
}

message FDBCLIConsistencycheck { google.protobuf.BoolValue mode = 1; }

message FDBCLICoordinatorsAuto {}
message FDBCLICoordinatorsAddresses { repeated string addresses = 1; }

message FDBCLICoordinators {
  oneof request {
    FDBCLICoordinatorsAuto auto = 1;
    FDBCLICoordinatorsAddresses addresses = 2;
  }
  google.protobuf.StringValue description = 3;
}

message FDBCLICreatetenant { string name = 1; }

message FDBCLIDatadistributionOn {}

message FDBCLIDatadistributionOff {}

message FDBCLIDatadistributionEnable { string option = 1; }

message FDBCLIDatadistributionDisable { string option = 1; }

message FDBCLIDatadistribution {
  oneof request {
    FDBCLIDatadistributionOn on = 1;
    FDBCLIDatadistributionOff off = 2;
    FDBCLIDatadistributionEnable enable = 3;
    FDBCLIDatadistributionDisable disable = 4;
  }
}

message FDBCLIDefaulttenant {}

message FDBCLIDeletetenant { string name = 1; }

message FDBCLIExclude {
  google.protobuf.BoolValue failed = 1;
  repeated string addresses = 2;
  google.protobuf.BoolValue no_wait = 3;
}

message FDBCLIExpensiveDataCheckInit {}

message FDBCLIExpensiveDataCheckList {}

message FDBCLIExpensiveDataCheckAll {}

message FDBCLIExpensiveDataCheckCheck { repeated string addresses = 1; }

message FDBCLIExpensiveDataCheck {
  oneof request {
    FDBCLIExpensiveDataCheckInit init = 1;
    FDBCLIExpensiveDataCheckList list = 2;
    FDBCLIExpensiveDataCheckAll all = 3;
    FDBCLIExpensiveDataCheckCheck check = 4;
  }
}

message FDBCLIFileconfigure {
  google.protobuf.BoolValue new = 1;
  string file = 2;
}

message FDBCLIForceRecoveryWithDataLoss { string dcid = 1; }

message FDBCLIGet { string key = 1; }

message FDBCLIGetrange {
  string begin_key = 1;
  google.protobuf.StringValue end_key = 2;
  google.protobuf.UInt32Value limit = 3;
}

message FDBCLIGetrangekeys {
  string begin_key = 1;
  google.protobuf.StringValue end_key = 2;
  google.protobuf.UInt32Value limit = 3;
}

message FDBCLIGettenant { string name = 1; }

message FDBCLIGetversion {}

message FDBCLIHelp { repeated string options = 1; }

message FDBCLIIncludeAddresses { repeated string addresses = 1; }

message FDBCLIInclude {
  google.protobuf.BoolValue failed = 1;
  oneof request {
    bool all = 2;
    FDBCLIIncludeAddresses addresses = 3;
  }
}

message FDBCLIKillInit {}

message FDBCLIKillList {}

message FDBCLIKillAll {}

message FDBCLIKillTargets { repeated string addresses = 1; }

message FDBCLIKill {
  oneof request {
    FDBCLIKillInit init = 1;
    FDBCLIKillList list = 2;
    FDBCLIKillAll all = 3;
    FDBCLIKillTargets targets = 4;
  }
  // Duration to sleep after sending the kill command.
  //
  // fdbcli may return before message is actually sent.
  // See https://github.com/apple/foundationdb/pull/9526
  google.protobuf.Duration sleep = 5;
}

message FDBCLIListtenants {
  google.protobuf.StringValue begin = 1;
  google.protobuf.StringValue end = 2;
  google.protobuf.UInt32Value limit = 3;
}

message FDBCLILock {}

message FDBCLIMaintenanceStatus {}

message FDBCLIMaintenanceOn {
  string zoneid = 1;
  uint32 seconds = 2;
}

message FDBCLIMaintenanceOff {}

message FDBCLIMaintenance {
  oneof request {
    FDBCLIMaintenanceStatus status = 1;
    FDBCLIMaintenanceOn on = 2;
    FDBCLIMaintenanceOff off = 3;
  }
}

message FDBCLIOptionBlank {}

message FDBCLIOptionArg {
  string state = 1;
  string option = 2;
  google.protobuf.StringValue arg = 3;
}

message FDBCLIOption {
  oneof request {
    FDBCLIOptionBlank blank = 1;
    FDBCLIOptionArg arg = 2;
  }
}

message FDBCLIProfileActionClientDefault {}

message FDBCLIProfileActionClientGet {}

message FDBCLIProfileActionClientSet {
  oneof rate {
    FDBCLIProfileActionClientDefault default_rate = 1;
    double value_rate = 2;
  }
  oneof size {
    FDBCLIProfileActionClientDefault default_size = 3;
    uint64 value_size = 4;
  }
}

message FDBCLIProfileActionClient {
  oneof request {
    FDBCLIProfileActionClientGet get = 1;
    FDBCLIProfileActionClientSet set = 2;
  }
}

message FDBCLIProfileActionList {}

message FDBCLIProfileActionFlow {
  uint32 duration = 1;
  // Client should simulate file. Internally
  // handled and returned in a Log below.
  repeated string processes = 2;
}

message FDBCLIProfileActionHeap { string process = 1; }

message FDBCLIProfile {
  oneof request {
    FDBCLIProfileActionClient client = 1;
    FDBCLIProfileActionList list = 2;
    FDBCLIProfileActionFlow flow = 3;
    FDBCLIProfileActionHeap heap = 4;
  }
}

message FDBCLISet {
  string key = 1;
  string value = 2;
}

message FDBCLISetclassArg {
  string address = 1;
  string class = 2;
}

// Use this message to indicate no arguments to setclass
message FDBCLISetclassList {}

message FDBCLISetclass {
  oneof request {
    FDBCLISetclassList list = 1;
    FDBCLISetclassArg arg = 2;
  }
}

message FDBCLISleep { uint32 seconds = 1; }

message FDBCLISnapshot {
  string command = 1;
  repeated string options = 2;
}

message FDBCLIStatus { google.protobuf.StringValue style = 1; }

message FDBCLISuspendInit {}

message FDBCLISuspendSuspend {
  double seconds = 1;
  repeated string addresses = 2;
}

message FDBCLISuspend {
  oneof request {
    FDBCLISuspendInit init = 1;
    FDBCLISuspendSuspend suspend = 2;
  }
}

message FDBCLITenantEmergencyMoveStart {
  string tenant_group = 1;
  string source_cluster = 2;
  string destination_cluster = 3;
}

message FDBCLITenantEmergencyMoveSwitch {
  string tenant_group = 1;
  string source_cluster = 2;
  string destination_cluster = 3;
}

message FDBCLITenantEmergencyMoveFinish {
  string tenant_group = 1;
  string source_cluster = 2;
  string destination_cluster = 3;
}

message FDBCLITenantEmergencyMoveAbort {
  string tenant_group = 1;
  string source_cluster = 2;
  string destination_cluster = 3;
}


message FDBCLITenantEmergencyMoveStatus {
  string tenant_group = 1;
}

message FDBCLITenantEmergencyMove {
  oneof request {
    FDBCLITenantEmergencyMoveStart start = 1;
    FDBCLITenantEmergencyMoveSwitch switch = 2;
    FDBCLITenantEmergencyMoveFinish finish = 3;
    FDBCLITenantEmergencyMoveAbort abort = 4;
    FDBCLITenantEmergencyMoveStatus status = 5;
  }
}

message FDBCLIThrottleActionOn {
  string tag = 1;
  google.protobuf.UInt32Value rate = 2;
  google.protobuf.StringValue duration = 3;
  google.protobuf.StringValue priority = 4;
}

message FDBCLIThrottleActionOff {
  google.protobuf.StringValue type = 1;
  google.protobuf.StringValue tag = 2;
  google.protobuf.StringValue priority = 3;
}

message FDBCLIThrottleActionEnable {}

message FDBCLIThrottleActionDisable {}

message FDBCLIThrottleActionList {
  google.protobuf.StringValue type = 1;
  google.protobuf.UInt32Value limit = 2;
}

message FDBCLIThrottle {
  oneof request {
    FDBCLIThrottleActionOn on = 1;
    FDBCLIThrottleActionOff off = 2;
    FDBCLIThrottleActionEnable enable = 3;
    FDBCLIThrottleActionDisable disable = 4;
    FDBCLIThrottleActionList list = 5;
  }
}

message FDBCLITriggerddteaminfolog {}

message FDBCLITssqStart { string storage_uid = 1; }

message FDBCLITssqStop { string storage_uid = 1; }

message FDBCLITssqList {}

message FDBCLITssq {
  oneof request {
    FDBCLITssqStart start = 1;
    FDBCLITssqStop stop = 2;
    FDBCLITssqList list = 3;
  }
}

message FDBCLIUnlock { string uid = 1; }

message FDBCLIUsetenant { string name = 1; }

message FDBCLIWritemode { string mode = 1; }

message FDBCLIVersionepochInfo {}

message FDBCLIVersionepochGet {}

message FDBCLIVersionepochDisable {}

message FDBCLIVersionepochEnable {}

message FDBCLIVersionepochCommit {}

message FDBCLIVersionepochSet { int64 epoch = 1; }

message FDBCLIVersionepoch {
  oneof request {
    FDBCLIVersionepochInfo info = 1;
    FDBCLIVersionepochGet get = 2;
    FDBCLIVersionepochDisable disable = 3;
    FDBCLIVersionepochEnable enable = 4;
    FDBCLIVersionepochCommit commit = 5;
    FDBCLIVersionepochSet set = 6;
  }
}

message FDBCLIWaitconnected {}

message FDBCLIWaitopen {}

// FDBCLICommand defines all of the fdbcli commands supported.
// Certain items are excluded that don't make sense in a non-interactive
// session such as reset or rollback.
// This message is broken out separately for ease of use since it has
// gotten so large.
// NEXT: 50
message FDBCLICommand {
  oneof command {
    // Does not include begin, commit, exit, help, reset, or rollback.
    FDBCLIAdvanceversion advanceversion = 1;
    FDBCLIBegin begin = 47;
    FDBCLIBlobrange blobrange = 41;
    FDBCLICacheRange cache_range = 46;
    FDBCLIChangefeed changefeed = 40;
    FDBCLIClear clear = 2;
    FDBCLIClearrange clearrange = 3;
    FDBCLICommit commit = 48;
    FDBCLIConfigure configure = 4;
    FDBCLIConsistencycheck consistencycheck = 5;
    FDBCLICoordinators coordinators = 6;
    FDBCLICreatetenant createtenant = 29;
    FDBCLIDatadistribution datadistribution = 45;
    FDBCLIDefaulttenant defaulttenant = 30;
    FDBCLIDeletetenant deletetenant = 31;
    FDBCLIExclude exclude = 7;
    FDBCLIExpensiveDataCheck expensive_data_check = 44;
    FDBCLIFileconfigure fileconfigure = 8;
    FDBCLIForceRecoveryWithDataLoss force_recovery_with_data_loss = 9;
    FDBCLIGet get = 10;
    FDBCLIGetrange getrange = 11;
    FDBCLIGetrangekeys getrangekeys = 12;
    FDBCLIGettenant gettenant = 33;
    FDBCLIGetversion getversion = 13;
    FDBCLIHelp help = 32;
    FDBCLIInclude include = 14;
    FDBCLIKill kill = 15;
    FDBCLIListtenants listtenants = 36;
    FDBCLILock lock = 16;
    FDBCLIMaintenance maintenance = 17;
    FDBCLIOption option = 18;
    FDBCLIProfile profile = 19;
    FDBCLISet set = 20;
    FDBCLISetclass setclass = 21;
    FDBCLISnapshot snapshot = 39;
    FDBCLISleep sleep = 22;
    FDBCLIStatus status = 23;
    FDBCLISuspend suspend = 43;
    FDBCLITenantEmergencyMove tenant_emergency_move = 49;
    FDBCLIThrottle throttle = 24;
    FDBCLITriggerddteaminfolog triggerddteaminfolog = 25;
    FDBCLITssq tssq = 35;
    FDBCLIUnlock unlock = 26;
    FDBCLIUsetenant usetenant = 34;
    FDBCLIWritemode writemode = 27;
    FDBCLIVersionepoch versionepoch = 42;
    FDBCLIWaitconnected waitconnected = 37;
    FDBCLIWaitopen waitopen = 38;
    // This one isn't used but defined so tests can trigger the unknown type
    // check.
    FDBCLIUnknownAction unknown = 28;
  }
}

message FDBCLIUnknownAction {}

// FDBCLIRequest defines the fdbcli command(s) to run.
// This will replicate fdbcli --exec "command(s)" (where N commands are
// separated by ;)
// NEXT: 20
message FDBCLIRequest {
  reserved 11, 12, 13;
  // NOTE: Doesn't include status-from-json as that just prints a status
  //       from a given json file which would require uploading and seems
  //       unneeded today.
  // Maps to -C|--cluster-file
  google.protobuf.StringValue config = 1;
  // Maps to –-log (if set implies --log-dir which is handled automatically)
  google.protobuf.BoolValue log = 2;
  // Maps to –-trace-format
  google.protobuf.StringValue trace_format = 3;
  // Maps to –-tls_certificate_file
  google.protobuf.StringValue tls_certificate_file = 4;
  // Maps to –-tls_ca_file
  google.protobuf.StringValue tls_ca_file = 5;
  // Maps to –-tls_key_file
  google.protobuf.StringValue tls_key_file = 6;
  // Maps to –-tls_password
  google.protobuf.StringValue tls_password = 7;
  // Maps to –-tls_verify_peers
  google.protobuf.StringValue tls_verify_peers = 8;
  // Maps to –-debug-tls
  google.protobuf.BoolValue debug_tls = 9;
  // Maps to -v|--version
  google.protobuf.BoolValue version = 10;
  // Maps to --log-group
  google.protobuf.StringValue log_group = 14;
  // Maps to --no-status
  google.protobuf.BoolValue no_status = 15;
  // Maps to --memory
  google.protobuf.StringValue memory = 16;
  // Maps to --build-flags
  google.protobuf.BoolValue build_flags = 17;
  // Maps to --timeout
  google.protobuf.Int32Value timeout = 18;
  // Maps to --knob_<knob_name>=<knob_value>
  // Provide a comma-separated list in the form "<knob_name1>=<knob_value1>,<knob_name2>=<knob_value2>, ..."
  google.protobuf.StringValue knobs = 19;
  repeated FDBCLICommand commands = 20;
}

message Log {
  string filename = 1;
  bytes contents = 2;
}

message FDBCLIResponseOutput {
  bytes stdout = 1;
  bytes stderr = 2;
  int32 retCode = 3;
}

message FDBCLIResponse {
  oneof response {
    FDBCLIResponseOutput output = 1;
    // Log will steam back any logfiles generated sequentially.
    // When filename changes a new log has begun and the previous completed.
    Log log = 2;
  }
}

service Server {
  rpc FDBServer(FDBServerRequest) returns (FDBServerResponse) {}
}

message FDBServerRequest {

repeated FDBServerCommand commands = 1;
}

// FDBServerCommand defines all of the fdbserver commands supported.
message FDBServerCommand {
  oneof command {
    FDBServerVersion version = 1;
    // just for test purpose
    FDBServerUnknownAction unknown = 2;
  }
}

message FDBServerVersion {}

message FDBServerUnknownAction {}

message FDBServerResponse {
  bytes stdout = 1;
  bytes stderr = 2;
  int32 retCode = 3;
}
